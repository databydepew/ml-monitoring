server:
  global:
    scrape_interval: 15s
    evaluation_interval: 15s
  
  persistentVolume:
    enabled: true
    size: 10Gi
  
  service:
    type: LoadBalancer

  extraScrapeConfigs: |
    - job_name: 'refinance-predictor'
      metrics_path: /metrics
      static_configs:
        - targets: ['refinance-predictor.default.svc.cluster.local']

serverFiles:
  alerting_rules.yml:
    groups:
      - name: refinance_model_alerts
        rules:
        - alert: HighModelLatency
          expr: refinance:latency_95th_5m > 1.0
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High model prediction latency
            description: 95th percentile latency is above 1 second for 5 minutes
        - alert: HighErrorRate
          expr: refinance:error_rate_5m > 0.05
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: High prediction error rate
            description: Error rate is above 5% for 5 minutes
        - alert: ModelHealthCheck
          expr: refinance_model_health == 0
          for: 2m
          labels:
            severity: critical
          annotations:
            summary: Model health check failed
            description: Model health indicator is reporting unhealthy status
        - alert: BigQueryConnectionFailure
          expr: rate(refinance_bigquery_errors_total[5m]) > 0
          for: 2m
          labels:
            severity: critical
          annotations:
            summary: BigQuery connection issues detected
            description: Failed to connect to BigQuery table synthetic.synthetic_mortgage_data
        - alert: BigQueryLatencyHigh
          expr: refinance_bigquery_query_latency_seconds > 10
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: High BigQuery query latency
            description: BigQuery queries are taking longer than 10 seconds to complete

alertmanager:
  enabled: true
  persistentVolume:
    enabled: true
    size: 2Gi
  
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['severity']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'null'
      routes:
      - match:
          severity: critical
        receiver: 'null'
        group_wait: 10s
      - match:
          severity: warning
        receiver: 'null'
        group_wait: 30s
    receivers:
    - name: 'null'

nodeExporter:
  enabled: true

pushgateway:
  enabled: false

kubeStateMetrics:
  enabled: true
