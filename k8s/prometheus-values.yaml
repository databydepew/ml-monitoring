server:
  global:
    scrape_interval: 15s
    evaluation_interval: 15s

  persistentVolume:
    enabled: false

  service:
    type: ClusterIP
    port: 9090

  extraScrapeConfigs: |
    - job_name: 'ml-model-metrics'
      static_configs:
        - targets: ['localhost:8001']
      metrics_path: /metrics
      scrape_interval: 5s
      scheme: http

    - job_name: 'kubernetes-services'
      kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
              - monitoring
      relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2

  alerting:
    alertmanagers:
      - static_configs:
          - targets:
            - "alertmanager:9093"

serverFiles:
  alerting_rules.yml:
    groups:
      - name: model-performance-alerts
        rules:
        - alert: LowModelAccuracy
          expr: model_accuracy < 0.7
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "Model accuracy is below 70%"
            description: "Current accuracy: {{ $value }}"
        - alert: HighLatency
          expr: prediction_latency_seconds > 1.0
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "High prediction latency"
            description: "Latency: {{ $value }} seconds"

alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'slack'
    receivers:
      - name: 'slack'
        slack_configs:
          - api_url: 'https://hooks.slack.com/services/your/slack/webhook'
            channel: '#alerts'
            send_resolved: true

nodeExporter:
  enabled: false

pushgateway:
  enabled: false

kubeStateMetrics:
  enabled: false